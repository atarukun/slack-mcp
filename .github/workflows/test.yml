name: Test and Lint

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.12"]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache pip packages
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/pyproject.toml') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev]"
    
    - name: Run tests with pytest
      run: |
        pytest tests/ -v --tb=short --cov=src/slack_mcp --cov-report=term-missing --cov-report=html
    
    - name: Upload coverage reports
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report
        path: htmlcov/
      if: always()
    
    # Linting checks (non-blocking)
    - name: Run flake8 linting
      run: |
        flake8 src/ --count --statistics || true
      continue-on-error: true
    
    - name: Run mypy type checking
      run: |
        mypy src/ || true
      continue-on-error: true
    
    - name: Check code formatting with black
      run: |
        black --check src/ || true
      continue-on-error: true
    
    - name: Check import sorting with isort
      run: |
        isort --check-only src/ || true
      continue-on-error: true
    
    # Post linting results as comment (for PRs)
    - name: Comment linting results
      uses: actions/github-script@v7
      if: github.event_name == 'pull_request'
      with:
        script: |
          const output = `
          ## üîç Linting Results (Non-blocking)
          
          The following linting checks were run. These are informational only and will not block the merge:
          
          - **flake8**: Check the job logs for style issues
          - **mypy**: Check the job logs for type checking issues  
          - **black**: Check the job logs for formatting suggestions
          - **isort**: Check the job logs for import sorting suggestions
          
          To run these locally:
          \`\`\`bash
          pip install -e ".[dev]"
          flake8 src/
          mypy src/
          black --check src/
          isort --check-only src/
          \`\`\`
          `;
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: output
          })
      continue-on-error: true
